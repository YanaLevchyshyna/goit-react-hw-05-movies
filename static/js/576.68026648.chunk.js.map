{"version":3,"file":"static/js/576.68026648.chunk.js","mappings":"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","sources":["components/SearchBar/SearchBar.jsx","components/SearchMoviesList/SearchMoviesList.jsx","pages/Movies/Movies.jsx","services/fetchApi.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function SearchBar({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // Відповідає за оновлення стану\n  const handleChange = e => {\n    const { value } = e.currentTarget;\n\n    setSearchQuery(value.toLowerCase());\n  };\n\n  //   Викликається під час відправлення форми\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      toast.info('Please enter the name of the movie', {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      return;\n    }\n    onSubmit(searchQuery);\n    setSearchQuery(searchQuery);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"searchQuery\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={searchQuery}\n        onChange={handleChange}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n}\n","import { useLocation, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function SearchMoviesList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nSearchMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n    })\n  ),\n};\n","// import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n// import { useDebounce } from 'react-recipes';\nimport getApi from 'services/fetchApi';\nimport Loader from 'components/Loader/Loader';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport SearchMoviesList from 'components/SearchMoviesList/SearchMoviesList';\n\nconst searchApi = getApi();\n\nexport default function Movies() {\n  const [movies, setMovies] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = searchQuery => {\n    setSearchQuery(searchQuery);\n  };\n\n  // const [searchParams, setSearchParams] = useSearchParams({ query: '' });\n\n  // const query = searchParams.get('query');\n  // const debounceQuery = useDebounce(query, 250); //затримуємо виконання функції,\n  // тобто поки користувач не припинить вводоити текст протягом певного періоду\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n\n    setLoading(true);\n\n    const fetchDataSearchMovie = async () => {\n      try {\n        const { results } = await searchApi.fetchSearchMovie(searchQuery);\n        if (!results) {\n          toast.error('The movie could not be found.', {\n            position: toast.POSITION.TOP_CENTER,\n          });\n          return;\n        }\n        setMovies(results);\n        console.log('setMovieName SEARCH ==>', results);\n      } catch (error) {\n        console.error(error);\n        toast.error('404 Error !!!', {\n          position: toast.POSITION.TOP_CENTER,\n        });\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchDataSearchMovie();\n\n    // setMovies([]);\n    setLoading(false);\n  }, [searchQuery]);\n\n  console.log('movies', movies);\n\n  return (\n    <>\n      <main>\n        {loading && <Loader />}\n        <h1>Movies</h1>\n        <SearchBar onSubmit={handleSubmit} />\n        {movies && (\n          <section>\n            <SearchMoviesList movies={movies} />\n          </section>\n        )}\n      </main>\n    </>\n  );\n}\n","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlMTMxNTJlM2MxOWQ1YzU3NjQyMzVjZmFhMmU0MjJmMSIsInN1YiI6IjY0ZTU4ZTdhMWZlYWMxMDBhYjhlNTA4MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.k6MLKJDkEcuLx4u4b6W5X0t6JAySBDO73jvRSeD_w2g',\n  },\n};\n\nasync function fetchTrendingMovies() {\n  try {\n    const response = await fetch(\n      'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n      options\n    );\n    // console.log('response fetch', response);\n\n    if (!response.ok) {\n      return Promise.reject(new Error(`Sorry, something went wrong...`));\n    }\n\n    const data = await response.json();\n    // console.log('data trending', data);\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function fetchMovieId(movieId) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n      options\n    );\n    // console.log('response fetchID', response);\n\n    const data = await response.json();\n    console.log('data ID == ID', data);\n    return data;\n  } catch (error) {\n    console.error('ERROR', error);\n  }\n}\n\nasync function fetchMovieActors(movieId) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n      options\n    );\n    console.log('response fetchActor', response);\n\n    const data = await response.json();\n    console.log('data ACTORS ACTORS', data);\n    return data;\n  } catch (error) {\n    console.log('ERROR', error);\n  }\n}\n\nasync function fetchMovieReviews(movieId) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US`,\n      options\n    );\n    console.log('reviews', response);\n\n    const data = await response.json();\n    console.log('data reviews', data);\n    return data;\n  } catch (error) {\n    console.log('ERROR', error);\n  }\n}\n\nasync function fetchSearchMovie(query) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n      options\n    );\n    // console.log('SEARCH QUERY', response);\n\n    if (!response.ok) {\n      return Promise.reject(new Error(`Sorry, something went wrong...`));\n    }\n\n    const data = await response.json();\n    console.log('SEARCH QUERY', data);\n    return data;\n  } catch (error) {\n    console.error('ERROR', error);\n  }\n}\n\nconst getApi = () => {\n  return {\n    fetchTrendingMovies,\n    fetchMovieId,\n    fetchMovieActors,\n    fetchMovieReviews,\n    fetchSearchMovie,\n  };\n};\n\nexport default getApi;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["SearchBar","onSubmit","useState","searchQuery","setSearchQuery","e","preventDefault","trim","toast","position","type","name","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","SearchMoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","searchApi","getApi","Movies","setMovies","loading","setLoading","useEffect","fetchDataSearchMovie","fetchSearchMovie","results","console","log","error","Loader","options","method","headers","accept","Authorization","fetchTrendingMovies","fetch","response","ok","Promise","reject","Error","json","data","fetchMovieId","movieId","fetchMovieActors","fetchMovieReviews","query","asyncGeneratorStep","gen","resolve","_next","_throw","key","arg","info","done","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}