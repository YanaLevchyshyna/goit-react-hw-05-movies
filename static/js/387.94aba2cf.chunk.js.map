{"version":3,"file":"static/js/387.94aba2cf.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/fetchApi.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { IoPersonCircleOutline } from 'react-icons/io5';\n\nexport const ReviewerImg = styled(IoPersonCircleOutline)`\n  width: 20px;\n  height: 20px;\n  stroke: grey;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport getApi from 'services/fetchApi';\nimport Loader from 'components/Loader/Loader';\nimport { ReviewerImg } from './Reviews.styled';\n\nconst movieIdApi = getApi();\n\nexport default function Reviews() {\n  const { i18n } = useTranslation();\n  const currentLanguage = i18n.language;\n\n  const [reviews, setReviews] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n\n    const fetchDataMovieReviews = async () => {\n      try {\n        const { results } = await movieIdApi.fetchMovieReviews(\n          id,\n          currentLanguage\n        );\n\n        if (results.length === 0) {\n          toast.info('There are no reviews.', {\n            position: toast.POSITION.TOP_CENTER,\n          });\n          return;\n        }\n        setReviews(results);\n        // console.log('Reviews', results);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDataMovieReviews();\n  }, [id, currentLanguage]);\n\n  return (\n    <>\n      {loading && <Loader />}\n\n      {reviews && reviews.length > 0 ? (\n        <section>\n          <div>\n            <ul>\n              {reviews.map(review => (\n                <li key={review.id}>\n                  <ReviewerImg />\n                  <p>{review.author}</p>\n                  <p>{review.content}</p>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </section>\n      ) : (\n        <p>There are no reviews</p>\n      )}\n    </>\n  );\n}\n","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlMTMxNTJlM2MxOWQ1YzU3NjQyMzVjZmFhMmU0MjJmMSIsInN1YiI6IjY0ZTU4ZTdhMWZlYWMxMDBhYjhlNTA4MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.k6MLKJDkEcuLx4u4b6W5X0t6JAySBDO73jvRSeD_w2g',\n  },\n};\n\nasync function fetchTrendingMovies(lng) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/trending/movie/day?language=${lng}`,\n      options\n    );\n    // console.log('response fetch', response);\n\n    if (!response.ok) {\n      return Promise.reject(new Error(`Sorry, something went wrong...`));\n    }\n\n    const data = await response.json();\n    // console.log('data trending', data);\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function fetchMovieId(movieId, lng) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?language=${lng}`,\n      options\n    );\n    // console.log('response fetchID', response);\n\n    const data = await response.json();\n    // console.log('data ID == ID', data);\n    return data;\n  } catch (error) {\n    console.error('ERROR', error);\n  }\n}\n\nasync function fetchMovieActors(movieId, lng) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?language=${lng}`,\n      options\n    );\n    // console.log('response fetchActor', response);\n\n    const data = await response.json();\n    // console.log('data ACTORS ACTORS', data);\n    return data;\n  } catch (error) {\n    console.log('ERROR', error);\n  }\n}\n\nasync function fetchMovieReviews(movieId, lng) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=${lng}`,\n      options\n    );\n    // console.log('reviews', response);\n\n    const data = await response.json();\n    // console.log('data reviews', data);\n    return data;\n  } catch (error) {\n    console.log('ERROR', error);\n  }\n}\n\nasync function fetchSearchMovie(query, lng) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=${lng}&page=1`,\n      options\n    );\n    // console.log('SEARCH QUERY', response);\n\n    if (!response.ok) {\n      return Promise.reject(new Error(`Sorry, something went wrong...`));\n    }\n\n    const data = await response.json();\n    // console.log('SEARCH QUERY', data);\n    return data;\n  } catch (error) {\n    console.error('ERROR', error);\n  }\n}\n\nconst getApi = () => {\n  return {\n    fetchTrendingMovies,\n    fetchMovieId,\n    fetchMovieActors,\n    fetchMovieReviews,\n    fetchSearchMovie,\n  };\n};\n\nexport default getApi;\n"],"names":["ReviewerImg","styled","IoPersonCircleOutline","movieIdApi","getApi","Reviews","currentLanguage","useTranslation","i18n","language","useState","reviews","setReviews","loading","setLoading","id","useParams","useEffect","fetchDataMovieReviews","fetchMovieReviews","results","length","toast","position","console","error","Loader","map","review","author","content","options","method","headers","accept","Authorization","fetchTrendingMovies","lng","fetch","response","ok","Promise","reject","Error","json","data","fetchMovieId","movieId","fetchMovieActors","log","fetchSearchMovie","query"],"sourceRoot":""}