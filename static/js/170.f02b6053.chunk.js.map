{"version":3,"file":"static/js/170.f02b6053.chunk.js","mappings":"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","sources":["components/Error/Error.styled.jsx","components/Error/Error.jsx","pages/MovieDetails/MovieDetails.styled.jsx","components/CircularProgressbar/CircularProgressbar.jsx","pages/MovieDetails/MovieDetails.jsx","services/timeConversion.js","services/fetchApi.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ErrorEl = styled.p`\n  margin: 0 auto;\n  margin-top: 40px;\n  margin-bottom: 40px;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.2;\n  color: red;\n  width: 400px;\n  text-align: center;\n`;\n\nexport const ImgError = styled.img`\n  width: 240px;\n  margin: 0 auto;\n`;\n","import { ErrorEl, ImgError } from './Error.styled';\nimport errorImage from './errorImage.jpeg';\n\nexport default function Error() {\n  return (\n    <div role=\"alert\">\n      <ErrorEl>The resource you requested could not be found.</ErrorEl>\n      <ImgError src={errorImage} alt=\"Error\" />\n    </div>\n  );\n}\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const BackLink = styled(NavLink)`\n  display: block;\n  text-decoration: none;\n  margin-bottom: 10px;\n  font-weight: 500;\n  font-size: 18px;\n  position: relative;\n  color: #424552;\n  z-index: 1;\n\n  &:hover {\n    color: inherit;\n  }\n`;\n\nexport const MovieDetailsSection = styled.section`\n  padding: 35px 40px;\n`;\n\nexport const MovieDetailsContainer = styled.div`\n  display: flex;\n`;\n\nexport const MovieDetailsContainerImg = styled.div``;\n\nexport const MovieDetailsContainerDescription = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding-left: 40px;\n`;\n\nexport const MovieTitle = styled.h2`\n  margin-bottom: 8px;\n  font-weight: 700;\n  font-size: ${props => props.theme.fontSizes.m};\n  color: ${props => props.theme.colors.textColor};\n\n  @media screen and (min-width: 768px) {\n    font-size: ${props => props.theme.fontSizes.xl};\n  }\n`;\n\nexport const DivWrapp = styled.div`\n  display: flex;\n  margin-bottom: 8px;\n`;\n\nexport const ReleaseDate = styled.p`\n  color: ${props => props.theme.colors.textColor};\n\n  @media screen and (min-width: 768px) {\n    font-weight: ${props => props.theme.fontWeights.medium};\n  }\n`;\nexport const Runtime = styled.p`\n  color: ${props => props.theme.colors.textColor};\n\n  @media screen and (min-width: 768px) {\n    font-weight: ${props => props.theme.fontWeights.medium};\n  }\n`;\n\nexport const VoteAverage = styled.p`\n  margin-bottom: 8px;\n  color: ${props => props.theme.colors.textColor};\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  gap: 10px;\n  font-weight: 400;\n`;\n\nexport const Genre = styled.li`\n  text-shadow: 0 0.4px 0.4px #fff;\n  font-size: ${props => props.theme.fontSizes.s};\n\n  color: ${props => props.theme.colors.textColor};\n\n  @media screen and (min-width: 768px) {\n    font-size: ${props => props.theme.fontSizes.m};\n  }\n`;\n\nexport const Tagline = styled.p`\n  margin-bottom: 8px;\n  font-style: italic;\n  color: ${props => props.theme.colors.textColor};\n`;\n\nexport const OverviewTitle = styled.h3`\n  margin-bottom: 5px;\n  color: ${props => props.theme.colors.textColor};\n`;\n\nexport const MovieOverview = styled.p`\n  color: ${props => props.theme.colors.textColor};\n`;\n","import { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport PropTypes from 'prop-types';\n\nconst formatRating = rating => {\n  const formattedRating = Math.round(rating * 10); // Округлюємо до одного знаку після коми\n\n  return `${formattedRating}`;\n};\n\nexport default function CircularRating({ rating }) {\n  const formattedCircularRating = formatRating(rating);\n\n  return (\n    <div style={{ width: 60, height: 60 }}>\n      <CircularProgressbar\n        value={formattedCircularRating}\n        maxValue={100}\n        text={`${formattedCircularRating}%`}\n        styles={buildStyles({\n          pathColor:\n            rating < 5 ? '#c7251a' : rating < 7 ? '#b57a04' : '#286b3a',\n          height: '100%',\n          width: '100%',\n          textSize: '32px',\n          fontWeight: '700',\n          pathTransitionDuration: 0.5,\n          textColor: '#ffffff',\n          trailColor: '#d6d6d6',\n          backgroundColor: '#fff',\n        })}\n      />\n    </div>\n  );\n}\n\nCircularRating.propTypes = {\n  rating: PropTypes.number,\n};\n","import { useState, useEffect, useRef } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { Link, Outlet } from 'react-router-dom';\nimport getApi from 'services/fetchApi';\nimport Loader from 'components/Loader/Loader';\nimport Error from 'components/Error/Error';\nimport {\n  BackLink,\n  MovieDetailsSection,\n  MovieDetailsContainer,\n  MovieDetailsContainerImg,\n  MovieDetailsContainerDescription,\n  MovieTitle,\n  DivWrapp,\n  MovieOverview,\n  Genres,\n  Genre,\n  ReleaseDate,\n  Runtime,\n  VoteAverage,\n  Tagline,\n  OverviewTitle,\n} from './MovieDetails.styled';\n\nimport { format, parseISO } from 'date-fns';\nimport { timeConversion } from 'services/timeConversion';\nimport CircularRating from 'components/CircularProgressbar/CircularProgressbar';\n\nconst movieIdApi = getApi();\n\nfunction MovieDetails() {\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const { id } = useParams();\n  // console.log('movieId-----', id);\n  // console.log('useParams()=====>>', useParams());\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  const baseUrl = 'https://image.tmdb.org/t/p/w300/';\n  const backdropImgUrl =\n    'https://image.tmdb.org/t/p/w1920_and_h800_multi_faces/';\n\n  useEffect(() => {\n    setLoading(true);\n    setError(false);\n\n    const fetchDataMovieDetails = async () => {\n      try {\n        await movieIdApi.fetchMovieId(id).then(response => {\n          // console.log('response ==>', response);\n\n          if (response.success === false) {\n            setError(\n              new Error('The resource you requested could not be found.')\n            );\n          }\n          setMovie(response);\n        });\n      } catch (error) {\n        setError(new Error('The resource you requested could not be found.'));\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDataMovieDetails();\n  }, [id]);\n\n  if (!movie) {\n    return;\n  }\n  const {\n    poster_path,\n    backdrop_path,\n    title,\n    release_date,\n    vote_average,\n    genres,\n    tagline,\n    overview,\n    runtime,\n  } = movie;\n\n  //  Змінюємо формат release_date \"2023-10-18\" на \"2023\"\n  const parsedReleaseDate = new Date(release_date); // Парсинг рядка у дату\n  const formattedReleaseYear = format(parsedReleaseDate, 'yyyy'); // Форматування року\n\n  // Спочатку розпарсіть рядок дати в об'єкт Date\n  const parsedDate = parseISO(release_date);\n\n  // Потім використовуйте функцію format для зміни формату\n  const formattedReleaseFullDate = format(parsedDate, 'dd/MM/yyyy');\n\n  const largeImage = `${backdropImgUrl}${backdrop_path}`;\n\n  const formattedTime = timeConversion(runtime);\n\n  return (\n    <>\n      {loading && <Loader />}\n\n      {error && <Error />}\n\n      <BackLink to={backLinkLocationRef.current}>\n        &larr; Back to movies\n      </BackLink>\n\n      {movie && (\n        <div\n          style={{\n            borderBottom: '1 solid rgba(31.5, 31.5, 31.5, 1)',\n            backgroundPosition: 'left calc((50vw - 170px) - 340px px) top',\n            backgroundSize: 'cover',\n            backgroundRepeat: 'no-repeat',\n            backgroundImage: `linear-gradient(\n    to right,\n    rgba(31.5, 31.5, 31.5, 1) calc((50vw - 170px) - 340px),\n    rgba(31.5, 31.5, 31.5, 0.84) 50%,\n    rgba(31.5, 31.5, 31.5, 0.84) 100%\n  ), url(${largeImage})`,\n          }}\n        >\n          <MovieDetailsSection>\n            <MovieDetailsContainer>\n              <MovieDetailsContainerImg>\n                <img src={`${baseUrl}${poster_path}`} alt={title} />\n              </MovieDetailsContainerImg>\n              <MovieDetailsContainerDescription>\n                <MovieTitle>\n                  {title}&nbsp;&#40;{formattedReleaseYear}&#41;\n                </MovieTitle>\n                <DivWrapp>\n                  <ReleaseDate>\n                    {formattedReleaseFullDate} &bull;&nbsp;\n                  </ReleaseDate>\n                  {/* жанри фільму */}\n                  {genres && (\n                    <Genres>\n                      {genres.map((genre, index) => (\n                        <Genre key={index}>{genre.name}&sbquo;</Genre>\n                      ))}\n                    </Genres>\n                  )}\n                  <Runtime>&nbsp;&bull; {formattedTime}</Runtime>\n                </DivWrapp>\n                <VoteAverage>{vote_average}</VoteAverage>\n                <CircularRating rating={vote_average} />\n                <Tagline>{tagline}</Tagline>\n                <OverviewTitle>Overview</OverviewTitle>\n                <MovieOverview>{overview}</MovieOverview>\n              </MovieDetailsContainerDescription>\n            </MovieDetailsContainer>\n          </MovieDetailsSection>\n        </div>\n      )}\n      <section>\n        <ul>\n          <li>\n            <Link to={`/movies/${id}/cast`}>Actors</Link>\n          </li>\n          <li>\n            <Link to={`/movies/${id}/reviews`}>Reviews</Link>\n          </li>\n        </ul>\n      </section>\n      <Outlet />\n    </>\n  );\n}\n\nexport default MovieDetails;\n","export const timeConversion = minutes => {\n  const hours = Math.floor(minutes / 60);\n  const remainingMinutes = minutes % 60; //  обчислюємо залишок хвилин, які не ввійшли в години\n\n  return `${hours}h ${remainingMinutes}m`;\n};\n","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlMTMxNTJlM2MxOWQ1YzU3NjQyMzVjZmFhMmU0MjJmMSIsInN1YiI6IjY0ZTU4ZTdhMWZlYWMxMDBhYjhlNTA4MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.k6MLKJDkEcuLx4u4b6W5X0t6JAySBDO73jvRSeD_w2g',\n  },\n};\n\nasync function fetchTrendingMovies() {\n  try {\n    const response = await fetch(\n      'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n      options\n    );\n    // console.log('response fetch', response);\n\n    if (!response.ok) {\n      return Promise.reject(new Error(`Sorry, something went wrong...`));\n    }\n\n    const data = await response.json();\n    // console.log('data trending', data);\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function fetchMovieId(movieId) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n      options\n    );\n    // console.log('response fetchID', response);\n\n    const data = await response.json();\n    console.log('data ID == ID', data);\n    return data;\n  } catch (error) {\n    console.error('ERROR', error);\n  }\n}\n\nasync function fetchMovieActors(movieId) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n      options\n    );\n    console.log('response fetchActor', response);\n\n    const data = await response.json();\n    console.log('data ACTORS ACTORS', data);\n    return data;\n  } catch (error) {\n    console.log('ERROR', error);\n  }\n}\n\nasync function fetchMovieReviews(movieId) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US`,\n      options\n    );\n    console.log('reviews', response);\n\n    const data = await response.json();\n    console.log('data reviews', data);\n    return data;\n  } catch (error) {\n    console.log('ERROR', error);\n  }\n}\n\nasync function fetchSearchMovie(query) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n      options\n    );\n    // console.log('SEARCH QUERY', response);\n\n    if (!response.ok) {\n      return Promise.reject(new Error(`Sorry, something went wrong...`));\n    }\n\n    const data = await response.json();\n    console.log('SEARCH QUERY', data);\n    return data;\n  } catch (error) {\n    console.error('ERROR', error);\n  }\n}\n\nconst getApi = () => {\n  return {\n    fetchTrendingMovies,\n    fetchMovieId,\n    fetchMovieActors,\n    fetchMovieReviews,\n    fetchSearchMovie,\n  };\n};\n\nexport default getApi;\n"],"names":["ErrorEl","styled","ImgError","Error","role","src","errorImage","alt","BackLink","NavLink","MovieDetailsSection","MovieDetailsContainer","MovieDetailsContainerImg","MovieDetailsContainerDescription","MovieTitle","props","theme","fontSizes","m","colors","textColor","xl","DivWrapp","ReleaseDate","fontWeights","medium","Runtime","VoteAverage","Genres","Genre","s","Tagline","OverviewTitle","MovieOverview","CircularRating","rating","formattedCircularRating","formattedRating","Math","round","formatRating","style","width","height","value","maxValue","text","styles","buildStyles","pathColor","textSize","fontWeight","pathTransitionDuration","trailColor","backgroundColor","movieIdApi","getApi","useState","movie","setMovie","loading","setLoading","error","setError","id","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchDataMovieDetails","fetchMovieId","then","response","success","poster_path","backdrop_path","title","release_date","vote_average","genres","tagline","overview","runtime","parsedReleaseDate","Date","formattedReleaseYear","format","parsedDate","parseISO","formattedReleaseFullDate","largeImage","formattedTime","minutes","hours","floor","remainingMinutes","timeConversion","Loader","to","current","borderBottom","backgroundPosition","backgroundSize","backgroundRepeat","backgroundImage","map","genre","index","name","options","method","headers","accept","Authorization","fetchTrendingMovies","fetch","ok","Promise","reject","json","data","console","movieId","log","fetchMovieActors","fetchMovieReviews","fetchSearchMovie","query"],"sourceRoot":""}