{"version":3,"file":"static/js/736.ddf74346.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/fetchApi.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { IoPersonOutline } from 'react-icons/io5';\n\nexport const DefaultImg = styled(IoPersonOutline)`\n  width: 200px;\n  height: 300px;\n  stroke: grey;\n`;\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  -webkit-box-pack: center;\n  justify-content: center;\n  gap: 20px;\n  margin: 0px auto;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport getApi from 'services/fetchApi';\nimport Loader from 'components/Loader/Loader';\nimport { DefaultImg, CastList } from './Cast.styled';\n\nconst movieIdApi = getApi();\n\nexport default function Cast() {\n  const { t, i18n } = useTranslation();\n  const language = i18n.language;\n  // console.log('currentLng', language);\n\n  const [cast, setCast] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const { id } = useParams();\n\n  const baseUrl = 'https://image.tmdb.org/t/p/w200/';\n\n  useEffect(() => {\n    setLoading(true);\n\n    const fetchDataMovieActors = async () => {\n      try {\n        const { cast } = await movieIdApi.fetchMovieActors(id, language);\n        if (cast.length === 0) {\n          toast.error('The resource you requested could not be found.', {\n            position: toast.POSITION.TOP_CENTER,\n          });\n          return;\n        }\n        setCast(cast);\n        // console.log('CAST', cast);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDataMovieActors();\n  }, [id, language]);\n\n  return (\n    <>\n      {loading && <Loader />}\n\n      {cast && (\n        <section>\n          <div>\n            <CastList>\n              {cast.map(actor => (\n                <li key={actor.name}>\n                  {actor.profile_path ? (\n                    <img\n                      src={`${baseUrl}${actor.profile_path}`}\n                      alt={actor.name}\n                    />\n                  ) : (\n                    <DefaultImg />\n                  )}\n                  <p>{t(actor.name)}</p>\n                  <p>{actor.character}</p>\n                </li>\n              ))}\n            </CastList>\n          </div>\n        </section>\n      )}\n    </>\n  );\n}\n","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlMTMxNTJlM2MxOWQ1YzU3NjQyMzVjZmFhMmU0MjJmMSIsInN1YiI6IjY0ZTU4ZTdhMWZlYWMxMDBhYjhlNTA4MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.k6MLKJDkEcuLx4u4b6W5X0t6JAySBDO73jvRSeD_w2g',\n  },\n};\n\nasync function fetchTrendingMovies(lng) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/trending/movie/day?language=${lng}`,\n      options\n    );\n    // console.log('response fetch', response);\n\n    if (!response.ok) {\n      return Promise.reject(new Error(`Sorry, something went wrong...`));\n    }\n\n    const data = await response.json();\n    // console.log('data trending', data);\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function fetchMovieId(movieId, lng) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?language=${lng}`,\n      options\n    );\n    // console.log('response fetchID', response);\n\n    const data = await response.json();\n    // console.log('data ID == ID', data);\n    return data;\n  } catch (error) {\n    console.error('ERROR', error);\n  }\n}\n\nasync function fetchMovieActors(movieId, lng) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?language=${lng}`,\n      options\n    );\n    // console.log('response fetchActor', response);\n\n    const data = await response.json();\n    // console.log('data ACTORS ACTORS', data);\n    return data;\n  } catch (error) {\n    console.log('ERROR', error);\n  }\n}\n\nasync function fetchMovieReviews(movieId, lng) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=${lng}`,\n      options\n    );\n    // console.log('reviews', response);\n\n    const data = await response.json();\n    // console.log('data reviews', data);\n    return data;\n  } catch (error) {\n    console.log('ERROR', error);\n  }\n}\n\nasync function fetchSearchMovie(query, lng) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=${lng}&page=1`,\n      options\n    );\n    // console.log('SEARCH QUERY', response);\n\n    if (!response.ok) {\n      return Promise.reject(new Error(`Sorry, something went wrong...`));\n    }\n\n    const data = await response.json();\n    // console.log('SEARCH QUERY', data);\n    return data;\n  } catch (error) {\n    console.error('ERROR', error);\n  }\n}\n\nconst getApi = () => {\n  return {\n    fetchTrendingMovies,\n    fetchMovieId,\n    fetchMovieActors,\n    fetchMovieReviews,\n    fetchSearchMovie,\n  };\n};\n\nexport default getApi;\n"],"names":["DefaultImg","styled","IoPersonOutline","CastList","movieIdApi","getApi","Cast","useTranslation","t","language","i18n","useState","cast","setCast","loading","setLoading","id","useParams","useEffect","fetchDataMovieActors","fetchMovieActors","length","toast","position","console","error","Loader","map","actor","profile_path","src","alt","name","character","options","method","headers","accept","Authorization","fetchTrendingMovies","lng","fetch","response","ok","Promise","reject","Error","json","data","fetchMovieId","movieId","log","fetchMovieReviews","fetchSearchMovie","query"],"sourceRoot":""}