{"version":3,"file":"static/js/803.ade75123.chunk.js","mappings":"kMAEaA,EAAUC,EAAAA,EAAAA,EAAH,6MAYPC,EAAWD,EAAAA,EAAAA,IAAH,4D,mECXN,SAASE,IACtB,OACE,iBAAKC,KAAK,QAAV,WACE,SAACJ,EAAD,8DACA,SAACE,EAAD,CAAUG,IAAKC,EAAYC,IAAI,YAGpC,C,+JCRc,SAASC,EAAT,GAAyC,IAAXC,EAAU,EAAVA,OACrCC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,8BACE,0BACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,2BACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,UACE,gBACEL,IAAG,UATH,oCASG,OAAeQ,EAAMK,aACxBX,IAAKM,EAAMM,oBAGf,uBAAIN,EAAMO,SACV,uBAAIP,EAAMQ,YACV,uBAAIR,EAAMS,iBATHT,EAAME,GADA,SAiB1B,C,kCClBKQ,G,SAAYC,EAAAA,EAAAA,MAyClB,MAvCA,WACE,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOhB,EAAP,KAAeiB,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAyBA,OAvBAC,EAAAA,EAAAA,YAAU,WACRH,GAAW,GAEX,IAAMI,EAAS,mCAAG,+GAEYT,EAAUU,sBAFtB,mBAIS,KAFfC,EAFM,EAENA,SAEIC,OAJE,uBAKZC,EAAAA,GAAAA,MAAY,mDAAoD,CAC9DC,SAAUD,EAAAA,GAAAA,SAAAA,aANA,0BAUdV,EAAUQ,GAVI,kDAYdJ,EAAS,EAAD,IAZM,yBAcdF,GAAW,GAdG,6EAAH,qDAiBfI,GACD,GAAE,KAGD,4BACGL,IAAW,SAACW,EAAA,EAAD,IAEXT,IAAS,SAAC1B,EAAA,EAAD,KAEV,4CACA,SAACK,EAAD,CAAoBC,OAAQA,MAGjC,C,uDChDK8B,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NALN,SASeV,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,+GAE2BW,MACrB,iEACAL,GAJN,WAEUM,EAFV,QAQkBC,GARlB,yCASaC,QAAQC,OAAO,IAAI7C,MAAJ,oCAT5B,uBAYuB0C,EAASI,OAZhC,cAYUC,EAZV,yBAcWA,GAdX,kCAgBIC,QAAQtB,MAAR,MAhBJ,0FAoBeuB,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BC,GAA5B,kGAE2BT,MAAM,sCAAD,OACYS,EADZ,mBAE1Bd,GAJN,cAEUM,EAFV,gBAQuBA,EAASI,OARhC,cAQUC,EARV,OASIC,QAAQG,IAAI,gBAAiBJ,GATjC,kBAUWA,GAVX,kCAYIC,QAAQtB,MAAM,QAAd,MAZJ,0FAgBe0B,EAAiB,GAAjBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCF,GAAhC,kGAE2BT,MAAM,sCAAD,OACYS,EADZ,2BAE1Bd,GAJN,cAEUM,EAFV,OAMIM,QAAQG,IAAI,sBAAuBT,GANvC,SAQuBA,EAASI,OARhC,cAQUC,EARV,OASIC,QAAQG,IAAI,qBAAsBJ,GATtC,kBAUWA,GAVX,kCAYIC,QAAQG,IAAI,QAAZ,MAZJ,0FAgBeE,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCH,GAAjC,kGAE2BT,MAAM,sCAAD,OACYS,EADZ,2BAE1Bd,GAJN,cAEUM,EAFV,OAMIM,QAAQG,IAAI,UAAWT,GAN3B,SAQuBA,EAASI,OARhC,cAQUC,EARV,OASIC,QAAQG,IAAI,eAAgBJ,GAThC,kBAUWA,GAVX,kCAYIC,QAAQG,IAAI,QAAZ,MAZJ,0FAgBeG,EAAiB,GAAjBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCC,GAAhC,kGAE2Bd,MAAM,mDAAD,OACyBc,EADzB,8CAE1BnB,GAJN,WAEUM,EAFV,QAQkBC,GARlB,yCASaC,QAAQC,OAAO,IAAI7C,MAAJ,oCAT5B,uBAYuB0C,EAASI,OAZhC,cAYUC,EAZV,OAaIC,QAAQG,IAAI,eAAgBJ,GAbhC,kBAcWA,GAdX,kCAgBIC,QAAQtB,MAAM,QAAd,MAhBJ,iFA8BA,IAVe,WACb,MAAO,CACLI,oBAAAA,EACAmB,aAAAA,EACAG,iBAAAA,EACAC,kBAAAA,EACAC,iBAAAA,EAEH,C,yCCzGD,SAASE,EAAmBC,EAAKC,EAASb,EAAQc,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAON,EAAII,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOtC,GAEP,YADAmB,EAAOnB,EAET,CACIqC,EAAKE,KACPP,EAAQM,GAERpB,QAAQc,QAAQM,GAAOE,KAAKP,EAAOC,EAEvC,CACe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAI5B,SAAQ,SAAUc,EAASb,GACpC,IAAIY,EAAMW,EAAGK,MAAMJ,EAAME,GACzB,SAASZ,EAAMK,GACbR,EAAmBC,EAAKC,EAASb,EAAQc,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOc,GACdlB,EAAmBC,EAAKC,EAASb,EAAQc,EAAOC,EAAQ,QAASc,EACnE,CACAf,OAAMgB,EACR,GACF,CACF,C","sources":["components/Error/Error.styled.jsx","components/Error/Error.jsx","components/TrendingMoviesList/TrendingMoviesList.jsx","pages/Home/Home.jsx","services/fetchApi.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ErrorEl = styled.p`\n  margin: 0 auto;\n  margin-top: 40px;\n  margin-bottom: 40px;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.2;\n  color: red;\n  width: 400px;\n  text-align: center;\n`;\n\nexport const ImgError = styled.img`\n  width: 240px;\n  margin: 0 auto;\n`;\n","import { ErrorEl, ImgError } from './Error.styled';\nimport errorImage from './errorImage.jpeg';\n\nexport default function Error() {\n  return (\n    <div role=\"alert\">\n      <ErrorEl>The resource you requested could not be found.</ErrorEl>\n      <ImgError src={errorImage} alt=\"Error\" />\n    </div>\n  );\n}\n","import { Link, useLocation } from 'react-router-dom';\n\nexport default function TrendingMoviesList({ movies }) {\n  const location = useLocation();\n  const baseUrl = 'https://image.tmdb.org/t/p/w200/';\n  return (\n    <section>\n      <div>\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                <img\n                  src={`${baseUrl}${movie.poster_path}`}\n                  alt={movie.original_title}\n                />\n              </Link>\n              <p>{movie.title}</p>\n              <p>{movie.overview}</p>\n              <p>{movie.vote_average}</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </section>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport getApi from 'services/fetchApi';\nimport TrendingMoviesList from 'components/TrendingMoviesList/TrendingMoviesList';\nimport Loader from 'components/Loader/Loader';\nimport Error from 'components/Error/Error';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst moviesApi = getApi();\n\nfunction Home() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const { results } = await moviesApi.fetchTrendingMovies();\n\n        if (results.length === 0) {\n          toast.error('Sorry, something went wrong... Please try again!', {\n            position: toast.POSITION.TOP_CENTER,\n          });\n          return;\n        }\n        setMovies(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <main>\n      {loading && <Loader />}\n\n      {error && <Error />}\n\n      <h1>Trending today</h1>\n      <TrendingMoviesList movies={movies} />\n    </main>\n  );\n}\nexport default Home;\n","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlMTMxNTJlM2MxOWQ1YzU3NjQyMzVjZmFhMmU0MjJmMSIsInN1YiI6IjY0ZTU4ZTdhMWZlYWMxMDBhYjhlNTA4MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.k6MLKJDkEcuLx4u4b6W5X0t6JAySBDO73jvRSeD_w2g',\n  },\n};\n\nasync function fetchTrendingMovies() {\n  try {\n    const response = await fetch(\n      'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n      options\n    );\n    // console.log('response fetch', response);\n\n    if (!response.ok) {\n      return Promise.reject(new Error(`Sorry, something went wrong...`));\n    }\n\n    const data = await response.json();\n    // console.log('data trending', data);\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function fetchMovieId(movieId) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n      options\n    );\n    // console.log('response fetchID', response);\n\n    const data = await response.json();\n    console.log('data ID == ID', data);\n    return data;\n  } catch (error) {\n    console.error('ERROR', error);\n  }\n}\n\nasync function fetchMovieActors(movieId) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n      options\n    );\n    console.log('response fetchActor', response);\n\n    const data = await response.json();\n    console.log('data ACTORS ACTORS', data);\n    return data;\n  } catch (error) {\n    console.log('ERROR', error);\n  }\n}\n\nasync function fetchMovieReviews(movieId) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US`,\n      options\n    );\n    console.log('reviews', response);\n\n    const data = await response.json();\n    console.log('data reviews', data);\n    return data;\n  } catch (error) {\n    console.log('ERROR', error);\n  }\n}\n\nasync function fetchSearchMovie(query) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n      options\n    );\n    // console.log('SEARCH QUERY', response);\n\n    if (!response.ok) {\n      return Promise.reject(new Error(`Sorry, something went wrong...`));\n    }\n\n    const data = await response.json();\n    console.log('SEARCH QUERY', data);\n    return data;\n  } catch (error) {\n    console.error('ERROR', error);\n  }\n}\n\nconst getApi = () => {\n  return {\n    fetchTrendingMovies,\n    fetchMovieId,\n    fetchMovieActors,\n    fetchMovieReviews,\n    fetchSearchMovie,\n  };\n};\n\nexport default getApi;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["ErrorEl","styled","ImgError","Error","role","src","errorImage","alt","TrendingMoviesList","movies","location","useLocation","map","movie","to","id","state","from","poster_path","original_title","title","overview","vote_average","moviesApi","getApi","useState","setMovies","loading","setLoading","error","setError","useEffect","fetchData","fetchTrendingMovies","results","length","toast","position","Loader","options","method","headers","accept","Authorization","fetch","response","ok","Promise","reject","json","data","console","fetchMovieId","movieId","log","fetchMovieActors","fetchMovieReviews","fetchSearchMovie","query","asyncGeneratorStep","gen","resolve","_next","_throw","key","arg","info","value","done","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}