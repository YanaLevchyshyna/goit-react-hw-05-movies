{"version":3,"file":"static/js/517.92bccb49.chunk.js","mappings":"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","sources":["components/Error/Error.styled.jsx","components/Error/Error.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/fetchApi.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ErrorEl = styled.p`\n  margin: 0 auto;\n  margin-top: 40px;\n  margin-bottom: 40px;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.2;\n  color: red;\n  width: 400px;\n  text-align: center;\n`;\n\nexport const ImgError = styled.img`\n  width: 240px;\n  margin: 0 auto;\n`;\n","import { ErrorEl, ImgError } from './Error.styled';\nimport errorImage from './errorImage.jpeg';\n\nexport default function Error() {\n  return (\n    <div role=\"alert\">\n      <ErrorEl>The resource you requested could not be found.</ErrorEl>\n      <ImgError src={errorImage} alt=\"Error\" />\n    </div>\n  );\n}\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const BackLink = styled(NavLink)`\n  display: block;\n  text-decoration: none;\n  margin-bottom: 10px;\n  font-weight: 500;\n  font-size: 18px;\n  position: relative;\n  color: #424552;\n  z-index: 1;\n\n  &:hover {\n    color: inherit;\n  }\n`;\n\nexport const MovieDetailsSection = styled.section`\n  padding: 35px 40px;\n`;\n\nexport const MovieDetailsContainer = styled.div`\n  display: flex;\n`;\n\nexport const MovieDetailsContainerImg = styled.div``;\n\nexport const MovieDetailsContainerDescription = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding-left: 40px;\n`;\n\nexport const MovieTitle = styled.h2`\n  margin-bottom: 5px;\n  font-weight: 700;\n  font-size: ${props => props.theme.fontSizes.l};\n  color: ${props => props.theme.colors.textColor};\n`;\n\nexport const DivWrapp = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const ReleaseDate = styled.p`\n  color: ${props => props.theme.colors.textColor};\n`;\nexport const Runtime = styled.p`\n  color: ${props => props.theme.colors.textColor};\n`;\nexport const VoteAverage = styled.p`\n  color: ${props => props.theme.colors.textColor};\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 5px;\n  font-weight: 400;\n`;\n\nexport const Genre = styled.li`\n  text-shadow: 0 0.4px 0.4px #fff;\n  font-size: ${props => props.theme.fontSizes.xs};\n  font-weight: bold;\n  color: ${props => props.theme.colors.textColor};\n\n  @media screen and (min-width: 768px) {\n    font-size: ${props => props.theme.fontSizes.s};\n  }\n`;\n\nexport const Tagline = styled.p`\n  color: ${props => props.theme.colors.textColor};\n`;\n\nexport const MovieOverview = styled.p`\n  color: ${props => props.theme.colors.textColor};\n`;\n","import { useState, useEffect, useRef } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { Link, Outlet } from 'react-router-dom';\nimport getApi from 'services/fetchApi';\nimport Loader from 'components/Loader/Loader';\nimport Error from 'components/Error/Error';\nimport {\n  BackLink,\n  MovieDetailsSection,\n  MovieDetailsContainer,\n  MovieDetailsContainerImg,\n  MovieDetailsContainerDescription,\n  MovieTitle,\n  DivWrapp,\n  MovieOverview,\n  Genres,\n  Genre,\n  ReleaseDate,\n  Runtime,\n  VoteAverage,\n  Tagline,\n} from './MovieDetails.styled';\n\nimport { format } from 'date-fns';\n\nconst movieIdApi = getApi();\n\nfunction MovieDetails() {\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const { id } = useParams();\n  // console.log('movieId-----', id);\n  // console.log('useParams()=====>>', useParams());\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  const baseUrl = 'https://image.tmdb.org/t/p/w300/';\n  const backdropImgUrl =\n    'https://image.tmdb.org/t/p/w1920_and_h800_multi_faces/';\n\n  useEffect(() => {\n    setLoading(true);\n    setError(false);\n\n    const fetchDataMovieDetails = async () => {\n      try {\n        await movieIdApi.fetchMovieId(id).then(response => {\n          // console.log('response ==>', response);\n\n          if (response.success === false) {\n            setError(\n              new Error('The resource you requested could not be found.')\n            );\n          }\n          setMovie(response);\n        });\n      } catch (error) {\n        setError(new Error('The resource you requested could not be found.'));\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDataMovieDetails();\n  }, [id]);\n\n  if (!movie) {\n    return;\n  }\n  const {\n    poster_path,\n    backdrop_path,\n    original_title,\n    release_date,\n    vote_average,\n    genres,\n    tagline,\n    overview,\n    runtime,\n  } = movie;\n\n  //  Змінюємо формат release_date \"2023-10-18\" на \"2023\"\n  const parsedReleaseDate = new Date(release_date); // Парсинг рядка у дату\n  const formattedReleaseDate = format(parsedReleaseDate, 'yyyy'); // Форматування року\n\n  const largeImage = `${backdropImgUrl}${backdrop_path}`;\n\n  return (\n    <>\n      {loading && <Loader />}\n\n      {error && <Error />}\n\n      <BackLink to={backLinkLocationRef.current}>\n        &larr; Back to movies\n      </BackLink>\n\n      {movie && (\n        <div\n          style={{\n            borderBottom: '1 solid rgba(31.5, 31.5, 31.5, 1)',\n            backgroundPosition: 'left calc((50vw - 170px) - 340px px) top',\n            backgroundSize: 'cover',\n            backgroundRepeat: 'no-repeat',\n            backgroundImage: `linear-gradient(\n    to right,\n    rgba(31.5, 31.5, 31.5, 1) calc((50vw - 170px) - 340px),\n    rgba(31.5, 31.5, 31.5, 0.84) 50%,\n    rgba(31.5, 31.5, 31.5, 0.84) 100%\n  ), url(${largeImage})`,\n          }}\n        >\n          <MovieDetailsSection>\n            <MovieDetailsContainer>\n              <MovieDetailsContainerImg>\n                <img src={`${baseUrl}${poster_path}`} alt={original_title} />\n              </MovieDetailsContainerImg>\n              <MovieDetailsContainerDescription>\n                <MovieTitle>\n                  {original_title}&nbsp;&#40;{formattedReleaseDate}&#41;\n                </MovieTitle>\n                <DivWrapp>\n                  <ReleaseDate>{release_date}</ReleaseDate>\n                  {/* жанри фільму */}\n                  {genres && (\n                    <Genres>\n                      {genres.map((genre, index) => (\n                        <Genre key={index}>{genre.name}</Genre>\n                      ))}\n                    </Genres>\n                  )}\n                  <Runtime>{runtime}</Runtime>\n                </DivWrapp>\n                <VoteAverage>{vote_average}</VoteAverage>\n                <Tagline>{tagline}</Tagline>\n                <MovieOverview>{overview}</MovieOverview>\n              </MovieDetailsContainerDescription>\n            </MovieDetailsContainer>\n          </MovieDetailsSection>\n        </div>\n      )}\n      <section>\n        <ul>\n          <li>\n            <Link to={`/movies/${id}/cast`}>Actors</Link>\n          </li>\n          <li>\n            <Link to={`/movies/${id}/reviews`}>Reviews</Link>\n          </li>\n        </ul>\n      </section>\n      <Outlet />\n    </>\n  );\n}\n\nexport default MovieDetails;\n","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlMTMxNTJlM2MxOWQ1YzU3NjQyMzVjZmFhMmU0MjJmMSIsInN1YiI6IjY0ZTU4ZTdhMWZlYWMxMDBhYjhlNTA4MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.k6MLKJDkEcuLx4u4b6W5X0t6JAySBDO73jvRSeD_w2g',\n  },\n};\n\nasync function fetchTrendingMovies() {\n  try {\n    const response = await fetch(\n      'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n      options\n    );\n    // console.log('response fetch', response);\n\n    if (!response.ok) {\n      return Promise.reject(new Error(`Sorry, something went wrong...`));\n    }\n\n    const data = await response.json();\n    // console.log('data trending', data);\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function fetchMovieId(movieId) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n      options\n    );\n    // console.log('response fetchID', response);\n\n    const data = await response.json();\n    console.log('data ID == ID', data);\n    return data;\n  } catch (error) {\n    console.error('ERROR', error);\n  }\n}\n\nasync function fetchMovieActors(movieId) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n      options\n    );\n    console.log('response fetchActor', response);\n\n    const data = await response.json();\n    console.log('data ACTORS ACTORS', data);\n    return data;\n  } catch (error) {\n    console.log('ERROR', error);\n  }\n}\n\nasync function fetchMovieReviews(movieId) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US`,\n      options\n    );\n    console.log('reviews', response);\n\n    const data = await response.json();\n    console.log('data reviews', data);\n    return data;\n  } catch (error) {\n    console.log('ERROR', error);\n  }\n}\n\nasync function fetchSearchMovie(query) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n      options\n    );\n    // console.log('SEARCH QUERY', response);\n\n    if (!response.ok) {\n      return Promise.reject(new Error(`Sorry, something went wrong...`));\n    }\n\n    const data = await response.json();\n    console.log('SEARCH QUERY', data);\n    return data;\n  } catch (error) {\n    console.error('ERROR', error);\n  }\n}\n\nconst getApi = () => {\n  return {\n    fetchTrendingMovies,\n    fetchMovieId,\n    fetchMovieActors,\n    fetchMovieReviews,\n    fetchSearchMovie,\n  };\n};\n\nexport default getApi;\n"],"names":["ErrorEl","styled","ImgError","Error","role","src","errorImage","alt","BackLink","NavLink","MovieDetailsSection","MovieDetailsContainer","MovieDetailsContainerImg","MovieDetailsContainerDescription","MovieTitle","props","theme","fontSizes","l","colors","textColor","DivWrapp","ReleaseDate","Runtime","VoteAverage","Genres","Genre","xs","s","Tagline","MovieOverview","movieIdApi","getApi","useState","movie","setMovie","loading","setLoading","error","setError","id","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchDataMovieDetails","fetchMovieId","then","response","success","poster_path","backdrop_path","original_title","release_date","vote_average","genres","tagline","overview","runtime","parsedReleaseDate","Date","formattedReleaseDate","format","largeImage","Loader","to","current","style","borderBottom","backgroundPosition","backgroundSize","backgroundRepeat","backgroundImage","map","genre","index","name","options","method","headers","accept","Authorization","fetchTrendingMovies","fetch","ok","Promise","reject","json","data","console","movieId","log","fetchMovieActors","fetchMovieReviews","fetchSearchMovie","query"],"sourceRoot":""}